name: test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  test:
    name: Build & test
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        rust:
          - stable
          - beta
          - nightly
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"

    runs-on: ${{ matrix.os }}

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          default: true
          profile: minimal

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Restore cache
        uses: Swatinem/rust-cache@v1

      - name: Build & test
        run: cargo test --all-features

  test-minimal-versions:
    name: Build with the minimal supported versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          # MSRV as set in Cargo.toml
          toolchain: 1.48.0
          default: true
          profile: minimal

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
          architecture: x64

      - name: Restore cache
        uses: Swatinem/rust-cache@v1

      - name: Install the minimal versions of dependencies
        env:
          # `-Z minimal-versions` is unstable, so we set 
          # `RUSTC_BOOTSTRAP=1` to be able to use it on stable
          RUSTC_BOOTSTRAP: "1"
        run: cargo update -Z minimal-versions

      - name: Build & test
        run: cargo test --all-features

  rustfmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
          components: rustfmt

      - run: cargo fmt --all -- --check

  links:
    name: Check documentation links
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      - name: Restore cache
        uses: Swatinem/rust-cache@v1

      - name: Check links
        run: cargo rustdoc --all-features -- -D warnings

  clippy:
    name: Clippy lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
          components: clippy

      - name: Restore cache
        uses: Swatinem/rust-cache@v1

      - name: Run clippy linter
        run: cargo clippy --all --tests -- -D clippy::all -D warnings

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true

      - name: Restore cache
        uses: Swatinem/rust-cache@v1

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '--all-features --run-types Doctests,Tests'
          timeout: 120

      - name: Upload to codecov.io
        uses: codecov/codecov-action@239febf655bba88b16ff5dea1d3135ea8663a1f9
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: cobertura.xml
          retention-days: 30
